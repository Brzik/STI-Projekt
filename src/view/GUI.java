/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 * @author Michaela Dopitová
 */
public class GUI extends javax.swing.JFrame {
    private static GUI view;
    private DefaultTableModel modelTabulky;
    private final Object jmenaSloupcu[] = {"Zkratka firmy", "Průměrná cena", 
        "Průměrný objem", "Maximum", "Minimum", "Dlouhodobý průměr", "Kupovat", "Graf"};
    
    
    /**
     * Creates new form GUI
     */
    private GUI() {
        modelTabulky = new DefaultTableModel(jmenaSloupcu, 0);
        initComponents();
        DoubleFormatRenderer renderer = new DoubleFormatRenderer();
        renderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        tabulka.getColumnModel().getColumn(1).setCellRenderer(renderer);
        tabulka.getColumnModel().getColumn(2).setCellRenderer(renderer);
        tabulka.getColumnModel().getColumn(3).setCellRenderer(renderer);
        tabulka.getColumnModel().getColumn(4).setCellRenderer(renderer);
        tabulka.getColumnModel().getColumn(5).setCellRenderer(renderer);
        DefaultTableCellRenderer koupitRenderer = new DefaultTableCellRenderer();
        koupitRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        tabulka.getColumnModel().getColumn(6).setCellRenderer(koupitRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        denOdText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mesicOdText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rokOdText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        denDoText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mesicDoText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        rokDoText = new javax.swing.JTextField();
        casovyUsekOK = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        datumAktualizace = new javax.swing.JLabel();
        error = new javax.swing.JLabel();
        aktualizovatData = new javax.swing.JButton();
        vykreslitGraf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabulka = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jan Brzobohatý, Michaela Dopitová");
        setMinimumSize(new java.awt.Dimension(600, 500));

        denOdText.setColumns(2);
        denOdText.setText("5");

        jLabel1.setText("Časový úsek od");

        jLabel2.setText("Časový úsek do");

        jLabel3.setText("den:");

        jLabel4.setText("měsíc:");

        mesicOdText.setColumns(2);
        mesicOdText.setText("5");

        jLabel6.setText("rok:");

        rokOdText.setColumns(4);
        rokOdText.setText("2014");

        jLabel7.setText("den:");

        denDoText.setColumns(2);
        denDoText.setText("19");

        jLabel8.setText("měsíc:");

        mesicDoText.setColumns(2);
        mesicDoText.setText("5");

        jLabel9.setText("rok:");

        rokDoText.setColumns(4);
        rokDoText.setText("2014");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(denOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesicOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rokOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(denDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesicDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rokDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(denOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(mesicOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(rokOdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(denDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(mesicDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(rokDoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        casovyUsekOK.setText("OK");

        jLabel10.setText("Datum poslední aktualizace:");

        datumAktualizace.setForeground(new java.awt.Color(0, 204, 0));

        error.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        error.setForeground(new java.awt.Color(204, 0, 0));
        error.setText("jLabel13");

        aktualizovatData.setText("Aktualizovat data");

        vykreslitGraf.setText("Vykreslit Graf");

        tabulka.setModel(modelTabulky);
        tabulka.setMinimumSize(new java.awt.Dimension(60, 20));
        jScrollPane1.setViewportView(tabulka);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(casovyUsekOK, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datumAktualizace)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(aktualizovatData, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vykreslitGraf, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(casovyUsekOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(datumAktualizace))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aktualizovatData, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vykreslitGraf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Tovární metoda
    public static GUI getGUI(){
        if(view == null){
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            view = new GUI();
        }
        return view;
    }

    public void addIntervalListener(ActionListener tlacitkoIntervalListener) {
        casovyUsekOK.addActionListener(tlacitkoIntervalListener);
    }

    public void addAktualizaceListener(ActionListener tlacitkoAktualizaceListener) {
        aktualizovatData.addActionListener(tlacitkoAktualizaceListener);
    }

    public void addGrafListener(ActionListener tlacitkoGrafListener) {
        vykreslitGraf.addActionListener(tlacitkoGrafListener);
    }
    
    public int getZacatekRok(){
        int rokOd=Integer.parseInt(rokOdText.getText());
        return rokOd;
    }
    
    public int getZacatekMesic(){
        int mesicOd=Integer.parseInt(mesicOdText.getText());
        return mesicOd;
    }
    
    public int getZacatekDen(){
        int denOd=Integer.parseInt(denOdText.getText());
        return denOd;
    }
    
    public int getKonecRok(){
        int rokDo=Integer.parseInt(rokDoText.getText());
        return rokDo;
    }
    
    public int getKonecMesic(){
        int mesicDo=Integer.parseInt(mesicDoText.getText());
        return mesicDo;
    }
    
    public int getKonecDen(){
        int denDo=Integer.parseInt(denDoText.getText());
        return denDo;
    }

    public void vypnoutTlacitka(){
        vykreslitGraf.setEnabled(false);
        aktualizovatData.setEnabled(false);
        casovyUsekOK.setEnabled(false);
    }
    
    public void zapnoutTlacitka(){
        vykreslitGraf.setEnabled(true);
        aktualizovatData.setEnabled(true);
        casovyUsekOK.setEnabled(true);
    }
    
    public void smazTabulku(){
        modelTabulky.setRowCount(0);
    }
    
    //zobrazi tabulku s daty
    public void pushDataToTable(ArrayList<Object[]> dataTabulka) {
        Iterator iterator = dataTabulka.iterator();
        
        while(iterator.hasNext()){
            pridejRadek((Object[]) iterator.next());
        }
        vytvorCheckBoxy();
    }
    
    private void pridejRadek(Object[] polozky){
        modelTabulky.addRow(polozky);
    }
    
    //prida checkbox do posledniho sloupecku
    private void vytvorCheckBoxy() {
        //checkbox pro posledni sloupecek
        for (int row = 0; row < tabulka.getRowCount(); row++){
            TableColumn tc = tabulka.getColumnModel().getColumn(7);
            tc.setCellEditor(tabulka.getDefaultEditor(Boolean.class));
            tc.setCellRenderer(tabulka.getDefaultRenderer(Boolean.class));
            tabulka.setValueAt(false,row,7);
        }
    }   
    
    public void zobrazChybu(String message) {
        error.setText(message);
    }

    public void zobrazDatumAktualizace(String datumAktualizacee, boolean aktualni) {
        datumAktualizace.setText(datumAktualizacee);
        if(aktualni==true){
            datumAktualizace.setForeground(new Color(0, 204, 0));
        }else{
            datumAktualizace.setForeground(Color.red);
        }
    }
    
    public void zobrazGraf(Object[][] dataGraf, double dlouhodobyPrumer,String nazevFirmy) {
        new Graf(dataGraf,dlouhodobyPrumer,nazevFirmy);
    }
    
    public ArrayList<String> getZaskrtnuteFirmy() {
        ArrayList<String> list = new ArrayList();
        
        //projde radky 
        for (int i = 0; i < tabulka.getRowCount(); i++) {
            boolean isChecked = (Boolean) modelTabulky.getValueAt(i, 7);

            //pokud je zaskrtnuto,projde sloupecky a vytaha z nich data
            if (isChecked) {
                list.add(modelTabulky.getValueAt(i,0).toString());
            }
        }
        return list;
    }
    
    public void smazChyby() {
        error.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aktualizovatData;
    private javax.swing.JButton casovyUsekOK;
    private javax.swing.JLabel datumAktualizace;
    private javax.swing.JTextField denDoText;
    private javax.swing.JTextField denOdText;
    private javax.swing.JLabel error;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mesicDoText;
    private javax.swing.JTextField mesicOdText;
    private javax.swing.JTextField rokDoText;
    private javax.swing.JTextField rokOdText;
    private javax.swing.JTable tabulka;
    private javax.swing.JButton vykreslitGraf;
    // End of variables declaration//GEN-END:variables

    private class DoubleFormatRenderer extends DefaultTableCellRenderer {
        private final DecimalFormat formatter = new DecimalFormat( "0.00" );
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            value = formatter.format((Number)value);
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column );
        }
    }
}

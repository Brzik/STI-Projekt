/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Michaela Dopitová
 */
public class Graf extends javax.swing.JFrame {
    
    
    public Graf(Object[][] dataGraf, double dlouhodobyPrumer, String nazevFirmy) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        
        DateAxis dateAxis = new DateAxis();

        DateTickUnit unit = null;
        unit = new DateTickUnit(DateTickUnit.DAY,1);

        DateFormat chartFormatter = new SimpleDateFormat("d. M. yyyy");
        dateAxis.setDateFormatOverride(chartFormatter);

        //dateAxis.setTickUnit(unit);
        dateAxis.setVerticalTickLabels(true);
        

        NumberAxis valueAxis = new NumberAxis("Průměrná cena");
        
        valueAxis.setAutoRangeIncludesZero(false);
        valueAxis.setAutoRange(true);
        
        XYSeries series = new XYSeries("data");
        for(int i=0;i<dataGraf.length;i++){
            series.add(((Date)dataGraf[i][0]).getTime(),(double)dataGraf[i][1]);
        }
        
        XYSeriesCollection xyDataset = new XYSeriesCollection(series);

        StandardXYToolTipGenerator ttg = new StandardXYToolTipGenerator(
                "{0}: {2}", chartFormatter, NumberFormat.getInstance());


        StandardXYItemRenderer renderer = new StandardXYItemRenderer(
                StandardXYItemRenderer.SHAPES_AND_LINES, ttg, null);

        renderer.setShapesFilled(true);

        XYPlot plot = new XYPlot(xyDataset, dateAxis, valueAxis, renderer);
        
        XYSeries series2 = new XYSeries("dlouhodobý průměr");
        series2.add(series.getMinX(),dlouhodobyPrumer);
        series2.add(series.getMaxX(),dlouhodobyPrumer);
        
        
        XYDataset data1 = new XYSeriesCollection(series2);
        XYLineAndShapeRenderer renderer1 = new XYLineAndShapeRenderer(true, false);
        plot.setDataset(2, data1);
        plot.setRenderer(2, renderer1);

        JFreeChart chart = new JFreeChart(nazevFirmy, JFreeChart.DEFAULT_TITLE_FONT, plot, false);
        chart.setBackgroundPaint(java.awt.Color.WHITE);
        
        ChartPanel chartPanel = new ChartPanel(chart);
        setLayout(new BorderLayout());
        add(chartPanel, BorderLayout.CENTER);
        this.pack();
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 813, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
